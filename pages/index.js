import Head from 'next/head'
import {useState} from 'react';
import styled from 'styled-components';

const Container = styled.div`
  background-color: #e5e5e5;
  height: 100vh;
  width: 100vw;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  overflow: hidden;
`;

const Card = styled.div`
  position: relative;
  width: 315px;
  height: 298px;
  background: #F4F4F4;
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  justify-items: center;
`;

const Gauge = styled.div`
  background: #fff;
  position: relative;
  width: 200px;
  height: 100px;
  border-top-left-radius: 110px;
  border-top-right-radius: 110px;
  margin-top: 0px;
  margin-bottom: 30px;
  align-self: center;
  overflow: hidden;
`;

const Counter = styled.div`
  position: absolute;
  top: 100%;
  left: 0px;
  width: inherit;
  height: 100%;
  background: #e0e0e0;
  transform-origin: center top;
  transform: rotate(${({$end}) => $end}turn);
  transition: transform 0.2 ease-out;
`;

const Cover = styled.div`
  position: absolute;
  top: 100%;
  left: 0px;
  width: inherit;
  height: 100%;
  background: #fff;
  transform-origin: center top;
  transform: rotate(${({$start}) => $start}turn);
  transition: transform 0.2 ease-out;
`;

const Content = styled.div`
  width: 100%;
  display: flex;
  padding-left: 55px;
  flex-flow: row nowrap;
`;

const Input = styled.input`
  height: 16px;
  width: 75px;
  margin-right: 10px;
`;

const Label = styled.label`
  width: 75px;
  margin-right: 10px;
  font-style: normal;
  font-weight: normal;
  font-size: 12px;
  line-height: 15px;
`;

const Item = styled.div`
  position: absolute;
  top: ${({top}) => top};
  left: ${({left}) => left};
  background-color: transparent;
  color: white;
  width: 240px;
  transform: rotate(${({spin}) => spin}turn);
`;

const Nums = styled.div`
  transform: rotate(-${({spin}) => spin}turn);
  color: #000;
  height: 20px;
  width: 20px;
`;

const P = styled.div`
  margin-left: 55px;
  padding-top: 10px;
  color: red;
`;

const Home = () => {
  const [start, setStart] = useState(45);
  const [end, setEnd] = useState(55);
  const calcGauge = (num) => {
    return (0.5 * num) / 100;
  }
  const onHandleInputChange = (type, value) => {
    if (!value) {
      type('')
      return;
    }
    if (!Number(value) || value > 100) {
      return;
    }
    type(value)
};
  return (
    <Container>
      <Head>
        <title>Gauge App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Card>
        <Gauge>
          <Counter $end={() => calcGauge(end)}></Counter>
          <Cover $start={() => calcGauge(start)}></Cover>
        </Gauge>
        {end > start && <Item left={'45px'} top={'150px'} spin={() => calcGauge(start)}><Nums spin={() => calcGauge(start)}>{start}</Nums></Item>}
        {end - 5 > start && <Item left={'40px'} top={'150px'} spin={() => calcGauge(end)}><Nums spin={() => calcGauge(end)}>{end}</Nums></Item>}
        {start > 4 && <Item left={'40px'} top={'150px'} spin="0"><Nums spin="0">0</Nums></Item>}
        {end < 96 && <Item left={'40px'} top={'150px'} spin="0.5"><Nums spin="0.5">100</Nums></Item>}
        <Content>
          <Label>
              Arc Start:
            <Input value={start} type="number" onChange={e => onHandleInputChange(setStart, e.target.value)}/>
          </Label>
          <Label>
              Arc End:
            <Input value={end} type="number" onChange={e => onHandleInputChange(setEnd, e.target.value)}/>
          </Label>
        </Content>
        {end <= start && <P>Invalid Input</P>}
      </Card>
    </Container>
  )
}

export default Home;